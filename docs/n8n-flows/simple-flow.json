{
  "name": "PoupeJ√° - WhatsApp Simple Flow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "poupeja-simple",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "4e0c5c24-8c5a-4c1a-9f4e-8b2a1d3e5f7g",
      "name": "üéØ Webhook Trigger",
      "type": "n8n-nodes-base.webhookTrigger",
      "typeVersion": 1,
      "position": [280, 300],
      "webhookId": "poupeja-simple"
    },
    {
      "parameters": {
        "jsCode": "// ‚öôÔ∏è CONFIGURA√á√ïES - EDITE AQUI\nconst EVOLUTION_API_URL = 'https://sua-evolution-api.com';  // ‚ö†Ô∏è SUA URL AQUI\nconst EVOLUTION_API_KEY = 'sua-api-key';                   // ‚ö†Ô∏è SUA API KEY AQUI  \nconst EVOLUTION_INSTANCE = 'sua-instancia';                // ‚ö†Ô∏è SUA INST√ÇNCIA AQUI\n\n// üì± Normalizar telefone brasileiro\nfunction normalizePhone(phone) {\n  if (!phone) return '';\n  \n  const cleaned = phone.toString().replace(/\\D/g, '');\n  \n  if (cleaned.startsWith('55')) {\n    return cleaned;\n  } else if (cleaned.length === 11) {\n    return '55' + cleaned;\n  } else if (cleaned.length === 10) {\n    return '55' + cleaned;\n  }\n  \n  return cleaned;\n}\n\n// üìù Construir mensagem WhatsApp\nfunction buildWhatsAppMessage(data) {\n  const { type, user, appointment, transaction, message } = data;\n  \n  if (message) {\n    return message;\n  }\n  \n  if (type === 'appointment_reminder' && appointment) {\n    const date = new Date(appointment.date).toLocaleDateString('pt-BR');\n    const time = new Date(appointment.date).toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });\n    \n    return `üóìÔ∏è *Lembrete de Compromisso*\\n\\nOl√° ${user.name}!\\n\\nüìÖ ${appointment.title}\\nüïê ${date} √†s ${time}\\n${appointment.location ? `üìç ${appointment.location}` : ''}\\n\\nüí° *PoupeJ√°*`;\n  }\n  \n  if (type === 'transaction_reminder' && transaction) {\n    const dueDate = new Date(transaction.due_date).toLocaleDateString('pt-BR');\n    const amount = transaction.amount ? `R$ ${transaction.amount.toFixed(2).replace('.', ',')}` : '';\n    \n    return `üí∞ *Lembrete Financeiro*\\n\\nOl√° ${user.name}!\\n\\nüìù ${transaction.title}\\n${amount ? `üíµ ${amount}` : ''}\\nüìÖ ${dueDate}\\n\\nüí° *PoupeJ√°*`;\n  }\n  \n  return `üì≤ *Notifica√ß√£o PoupeJ√°*\\n\\nOl√° ${user.name}!\\n\\n${data.message || 'Voc√™ tem uma nova notifica√ß√£o.'}\\n\\nüí° *PoupeJ√°*`;\n}\n\n// üöÄ Processar dados do webhook\nconst webhookData = $input.first().body;\nconst normalizedPhone = normalizePhone(webhookData.user?.phone);\nconst whatsappMessage = buildWhatsAppMessage(webhookData);\n\nreturn {\n  phone: normalizedPhone,\n  message: whatsappMessage,\n  evolutionConfig: {\n    apiUrl: EVOLUTION_API_URL,\n    apiKey: EVOLUTION_API_KEY,\n    instance: EVOLUTION_INSTANCE\n  },\n  originalData: webhookData\n};"
      },
      "id": "5f1d6e25-9d6b-5d2b-af5f-9c3b2e4f6g8h",
      "name": "‚öôÔ∏è Processar Dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [500, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.phone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "condition-2", 
              "leftValue": "={{ $json.phone.length }}",
              "rightValue": 13,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6g2e7f36-ae7c-6e3c-bg6g-ad4c3f5g7h9i",
      "name": "üì± Validar Telefone",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [720, 300]
    },
    {
      "parameters": {
        "url": "={{ $json.evolutionConfig.apiUrl }}/message/sendText/{{ $json.evolutionConfig.instance }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $json.evolutionConfig.apiKey }}"
            },
            {
              "name": "Content-Type", 
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": []
        },
        "jsonBody": "={\\n  \"number\": $json.phone,\\n  \"textMessage\": {\\n    \"text\": $json.message\\n  }\\n}",
        "options": {}
      },
      "id": "7h3f8g47-bf8d-7f4d-ch7h-be5d4g6h8i0j",
      "name": "üì≤ Enviar WhatsApp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [940, 180]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\\n  \"success\": true,\\n  \"message\": \"Mensagem WhatsApp enviada com sucesso! ‚úÖ\",\\n  \"phone\": $json.phone,\\n  \"timestamp\": $now\\n}",
        "options": {}
      },
      "id": "8i4g9h58-cg9e-8g5e-di8i-cf6e5h7i9j1k",
      "name": "‚úÖ Resposta Sucesso",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1160, 180]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\\n  \"success\": false,\\n  \"error\": \"Telefone inv√°lido ou vazio ‚ùå\",\\n  \"phone\": $json.phone || \"vazio\",\\n  \"timestamp\": $now\\n}",
        "options": {}
      },
      "id": "9j5h0i69-dh0f-9h6f-ej9j-dg7f6i8j0k2l",
      "name": "‚ùå Telefone Inv√°lido",
      "type": "n8n-nodes-base.respondToWebhook", 
      "typeVersion": 1,
      "position": [940, 420]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\\n  \"success\": false,\\n  \"error\": \"Falha ao enviar mensagem WhatsApp ‚ùå\",\\n  \"details\": \"Verifique se Evolution API est√° funcionando\",\\n  \"timestamp\": $now\\n}",
        "options": {}
      },
      "id": "0k6i1j7a-ei1g-0i7g-fk0k-eh8g7j9k1l3m",
      "name": "‚ùå Erro Envio",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1160, 300]
    }
  ],
  "connections": {
    "üéØ Webhook Trigger": {
      "main": [
        [
          {
            "node": "‚öôÔ∏è Processar Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚öôÔ∏è Processar Dados": {
      "main": [
        [
          {
            "node": "üì± Validar Telefone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üì± Validar Telefone": {
      "main": [
        [
          {
            "node": "üì≤ Enviar WhatsApp",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "‚ùå Telefone Inv√°lido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üì≤ Enviar WhatsApp": {
      "main": [
        [
          {
            "node": "‚úÖ Resposta Sucesso",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1.0.0"
}