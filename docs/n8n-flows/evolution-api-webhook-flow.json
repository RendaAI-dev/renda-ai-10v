{
  "name": "PoupeJ√° WhatsApp - Evolution API Webhook",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "poupeja-whatsapp",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "8b1d1c1d-6c1c-4c1c-8c1c-1c1c1c1c1c1c",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.type }}",
              "operation": "equal",
              "value2": "appointment_reminder"
            }
          ]
        }
      },
      "id": "9b2d2c2d-7c2c-5c2c-9c2c-2c2c2c2c2c2c",
      "name": "Is Appointment?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.type }}",
              "operation": "equal", 
              "value2": "transaction_reminder"
            }
          ]
        }
      },
      "id": "ac3d3c3d-8c3c-6c3c-ac3c-3c3c3c3c3c3c",
      "name": "Is Transaction?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 500]
    },
    {
      "parameters": {
        "jsCode": "// Processar dados do compromisso\nconst data = $input.all()[0].json;\n\n// Extrair dados do usu√°rio e compromisso\nconst user = data.user || {};\nconst appointment = data.appointment || {};\nconst customMessage = data.message || '';\n\n// Formatar telefone (remover caracteres especiais e garantir formato internacional)\nlet phone = user.phone || '';\nphone = phone.replace(/[^0-9]/g, '');\nif (phone.startsWith('55') && phone.length === 13) {\n  // J√° tem DDI, manter\n} else if (phone.length === 11) {\n  // Adicionar DDI do Brasil\n  phone = '55' + phone;\n} else if (phone.length === 10) {\n  // Adicionar DDI e 9¬∫ d√≠gito\n  phone = '55' + phone.substring(0, 2) + '9' + phone.substring(2);\n}\n\n// Criar mensagem formatada\nlet message = customMessage;\nif (!message && appointment.title) {\n  const appointmentDate = new Date(appointment.date);\n  const dateStr = appointmentDate.toLocaleDateString('pt-BR');\n  const timeStr = appointmentDate.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });\n  \n  message = `üóìÔ∏è *Lembrete de Compromisso*\\n\\n` +\n           `Ol√°, ${user.name || 'usu√°rio'}!\\n\\n` +\n           `Voc√™ tem um compromisso agendado:\\n` +\n           `üìÖ **${appointment.title}**\\n` +\n           `üïê Data/Hora: ${dateStr} √†s ${timeStr}\\n`;\n  \n  if (appointment.location) {\n    message += `üìç Local: ${appointment.location}\\n`;\n  }\n  \n  message += `\\nüí° *Enviado pelo sistema PoupeJ√°*`;\n}\n\nreturn [{\n  json: {\n    phone: phone,\n    message: message,\n    user: user,\n    appointment: appointment,\n    originalData: data\n  }\n}];"
      },
      "id": "bd4d4c4d-9c4c-7c4c-bd4c-4c4c4c4c4c4c",
      "name": "Process Appointment",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 200]
    },
    {
      "parameters": {
        "jsCode": "// Processar dados da transa√ß√£o\nconst data = $input.all()[0].json;\n\n// Extrair dados do usu√°rio e transa√ß√£o\nconst user = data.user || {};\nconst transaction = data.transaction || {};\nconst customMessage = data.message || '';\n\n// Formatar telefone (remover caracteres especiais e garantir formato internacional)\nlet phone = user.phone || '';\nphone = phone.replace(/[^0-9]/g, '');\nif (phone.startsWith('55') && phone.length === 13) {\n  // J√° tem DDI, manter\n} else if (phone.length === 11) {\n  // Adicionar DDI do Brasil\n  phone = '55' + phone;\n} else if (phone.length === 10) {\n  // Adicionar DDI e 9¬∫ d√≠gito\n  phone = '55' + phone.substring(0, 2) + '9' + phone.substring(2);\n}\n\n// Criar mensagem formatada\nlet message = customMessage;\nif (!message && transaction.title) {\n  const dueDate = new Date(transaction.due_date);\n  const dateStr = dueDate.toLocaleDateString('pt-BR');\n  const amount = transaction.amount ? `R$ ${Number(transaction.amount).toFixed(2)}` : '';\n  \n  message = `üí∞ *Lembrete de Transa√ß√£o*\\n\\n` +\n           `Ol√°, ${user.name || 'usu√°rio'}!\\n\\n` +\n           `Voc√™ tem uma transa√ß√£o programada:\\n` +\n           `üìù **${transaction.title}**\\n` +\n           `üíµ Valor: ${amount}\\n` +\n           `üìÖ Vencimento: ${dateStr}\\n`;\n  \n  if (transaction.description) {\n    message += `üìÑ Descri√ß√£o: ${transaction.description}\\n`;\n  }\n  \n  message += `\\nüí° *Enviado pelo sistema PoupeJ√°*`;\n}\n\nreturn [{\n  json: {\n    phone: phone,\n    message: message,\n    user: user,\n    transaction: transaction,\n    originalData: data\n  }\n}];"
      },
      "id": "ce5d5c5d-ac5c-8c5c-ce5c-5c5c5c5c5c5c",
      "name": "Process Transaction",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 600]
    },
    {
      "parameters": {
        "url": "={{ $json.evolutionApiUrl }}/message/sendText/{{ $json.instanceName }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "httpHeaderAuth": "evolutionApiCredential",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $json.phone }}\",\n  \"textMessage\": {\n    \"text\": \"{{ $json.message }}\"\n  }\n}",
        "options": {}
      },
      "id": "df6d6c6d-bc6c-9c6c-df6c-6c6c6c6c6c6c",
      "name": "Send WhatsApp Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "jsCode": "// Adicionar configura√ß√µes da Evolution API\nconst input = $input.all()[0].json;\n\nreturn [{\n  json: {\n    ...input,\n    evolutionApiUrl: 'https://SUA_EVOLUTION_API_URL',  // Substitua pela sua URL\n    instanceName: 'SUA_INSTANCIA',  // Substitua pelo nome da sua inst√¢ncia\n  }\n}];"
      },
      "id": "eg7d7c7d-cd7c-ac7c-eg7c-7c7c7c7c7c7c",
      "name": "Add Evolution Config",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"WhatsApp notification sent successfully\",\n  \"phone\": \"{{ $json.phone }}\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}"
      },
      "id": "fh8d8c8d-de8c-bd8c-fh8c-8c8c8c8c8c8c",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"error\": \"Failed to send WhatsApp notification\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}",
        "options": {
          "responseCode": 500
        }
      },
      "id": "gi9d9c9d-ef9c-ce9c-gi9c-9c9c9c9c9c9c",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 600]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Is Appointment?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Is Transaction?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Appointment?": {
      "main": [
        [
          {
            "node": "Process Appointment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Transaction?": {
      "main": [
        [
          {
            "node": "Process Transaction", 
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Appointment": {
      "main": [
        [
          {
            "node": "Add Evolution Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Transaction": {
      "main": [
        [
          {
            "node": "Add Evolution Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Evolution Config": {
      "main": [
        [
          {
            "node": "Send WhatsApp Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send WhatsApp Message": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "error": [
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-01-27T10:00:00.000Z",
      "updatedAt": "2025-01-27T10:00:00.000Z",
      "id": "poupeja-whatsapp",
      "name": "PoupeJ√° WhatsApp"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-01-27T10:00:00.000Z"
}